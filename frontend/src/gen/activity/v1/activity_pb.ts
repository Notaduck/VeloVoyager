// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file activity/v1/activity.proto (package activity.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file activity/v1/activity.proto.
 */
export const file_activity_v1_activity: GenFile = /*@__PURE__*/
  fileDesc("ChphY3Rpdml0eS92MS9hY3Rpdml0eS5wcm90bxILYWN0aXZpdHkudjEiHQoFUG9pbnQSCQoBeBgBIAEoARIJCgF5GAIgASgBIqIBCgZSZWNvcmQSCgoCaWQYASABKAUSJwoLY29vcmRpbmF0ZXMYAiABKAsyEi5hY3Rpdml0eS52MS5Qb2ludBINCgVzcGVlZBgDIAEoARIuCgp0aW1lX3N0YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQCghkaXN0YW5jZRgFIAEoBRISCgpoZWFydF9yYXRlGAYgASgFItQBChNHZXRBY3Rpdml0eVJlc3BvbnNlEgoKAmlkGAEgASgFEhIKCmNyZWF0ZWRfYXQYAiABKAkSEAoIZGlzdGFuY2UYAyABKAESFQoNYWN0aXZpdHlfbmFtZRgEIAEoCRIRCglhdmdfc3BlZWQYBSABKAESEQoJbWF4X3NwZWVkGAYgASgBEhQKDGVsYXBzZWRfdGltZRgHIAEoCRISCgp0b3RhbF90aW1lGAggASgJEiQKB3JlY29yZHMYCSADKAsyEy5hY3Rpdml0eS52MS5SZWNvcmQixgEKD0FjdGl2aXR5U3VtbWFyeRIKCgJpZBgBIAEoBRIuCgpjcmVhdGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQCghkaXN0YW5jZRgDIAEoARIVCg1hY3Rpdml0eV9uYW1lGAQgASgJEhEKCWF2Z19zcGVlZBgFIAEoARIRCgltYXhfc3BlZWQYBiABKAESFAoMZWxhcHNlZF90aW1lGAcgASgJEhIKCnRvdGFsX3RpbWUYCCABKAkiTgoXVXBsb2FkQWN0aXZpdGllc1JlcXVlc3QSFAoKZmlsZV9jaHVuaxgBIAEoDEgAEhIKCG1ldGFkYXRhGAIgASgJSABCCQoHcGF5bG9hZCIqChhVcGxvYWRBY3Rpdml0aWVzUmVzcG9uc2USDgoGc3RhdHVzGAEgASgJImgKGVVwbG9hZEFjdGl2aXRpZXNVbmFyeUZpbGUSDAoEZGF0YRgBIAEoDBIQCghmaWxlbmFtZRgCIAEoCRIUCgxjb250ZW50X3R5cGUYAyABKAkSFQoNbGFzdF9tb2RpZmllZBgEIAEoAyJVChxVcGxvYWRBY3Rpdml0aWVzVW5hcnlSZXF1ZXN0EjUKBWZpbGVzGAEgAygLMiYuYWN0aXZpdHkudjEuVXBsb2FkQWN0aXZpdGllc1VuYXJ5RmlsZSJJChVHZXRBY3Rpdml0aWVzUmVzcG9uc2USMAoKYWN0aXZpdGllcxgBIAMoCzIcLmFjdGl2aXR5LnYxLkFjdGl2aXR5U3VtbWFyeSIWChRHZXRBY3Rpdml0aWVzUmVxdWVzdCIpChJHZXRBY3Rpdml0eVJlcXVlc3QSEwoLYWN0aXZpdHlfaWQYASABKAUyjQMKD0FjdGl2aXR5U2VydmljZRJYCg1HZXRBY3Rpdml0aWVzEiEuYWN0aXZpdHkudjEuR2V0QWN0aXZpdGllc1JlcXVlc3QaIi5hY3Rpdml0eS52MS5HZXRBY3Rpdml0aWVzUmVzcG9uc2UiABJSCgtHZXRBY3Rpdml0eRIfLmFjdGl2aXR5LnYxLkdldEFjdGl2aXR5UmVxdWVzdBogLmFjdGl2aXR5LnYxLkdldEFjdGl2aXR5UmVzcG9uc2UiABJhChBVcGxvYWRBY3Rpdml0aWVzEiQuYWN0aXZpdHkudjEuVXBsb2FkQWN0aXZpdGllc1JlcXVlc3QaJS5hY3Rpdml0eS52MS5VcGxvYWRBY3Rpdml0aWVzUmVzcG9uc2UoARJpChVVcGxvYWRBY3Rpdml0aWVzVW5hcnkSKS5hY3Rpdml0eS52MS5VcGxvYWRBY3Rpdml0aWVzVW5hcnlSZXF1ZXN0GiUuYWN0aXZpdHkudjEuVXBsb2FkQWN0aXZpdGllc1Jlc3BvbnNlQjhaNmdpdGh1Yi5jb20vbm90YWR1Y2svYmFja2VuZC9nZW4vYWN0aXZpdHkvdjE7YWN0aXZpdHl2MWIGcHJvdG8z", [file_google_protobuf_timestamp]);

/**
 * Point represents a coordinate point.
 *
 * @generated from message activity.v1.Point
 */
export type Point = Message<"activity.v1.Point"> & {
  /**
   * @generated from field: double x = 1;
   */
  x: number;

  /**
   * @generated from field: double y = 2;
   */
  y: number;
};

/**
 * Describes the message activity.v1.Point.
 * Use `create(PointSchema)` to create a new message.
 */
export const PointSchema: GenMessage<Point> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 0);

/**
 * Record represents the details of an activity record.
 *
 * @generated from message activity.v1.Record
 */
export type Record = Message<"activity.v1.Record"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: activity.v1.Point coordinates = 2;
   */
  coordinates?: Point;

  /**
   * @generated from field: double speed = 3;
   */
  speed: number;

  /**
   * @generated from field: google.protobuf.Timestamp time_stamp = 4;
   */
  timeStamp?: Timestamp;

  /**
   * @generated from field: int32 distance = 5;
   */
  distance: number;

  /**
   * @generated from field: int32 heart_rate = 6;
   */
  heartRate: number;
};

/**
 * Describes the message activity.v1.Record.
 * Use `create(RecordSchema)` to create a new message.
 */
export const RecordSchema: GenMessage<Record> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 1);

/**
 * Activity represents the detailed information of a single activity.
 *
 * @generated from message activity.v1.GetActivityResponse
 */
export type GetActivityResponse = Message<"activity.v1.GetActivityResponse"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string created_at = 2;
   */
  createdAt: string;

  /**
   * @generated from field: double distance = 3;
   */
  distance: number;

  /**
   * @generated from field: string activity_name = 4;
   */
  activityName: string;

  /**
   * @generated from field: double avg_speed = 5;
   */
  avgSpeed: number;

  /**
   * @generated from field: double max_speed = 6;
   */
  maxSpeed: number;

  /**
   * @generated from field: string elapsed_time = 7;
   */
  elapsedTime: string;

  /**
   * @generated from field: string total_time = 8;
   */
  totalTime: string;

  /**
   * @generated from field: repeated activity.v1.Record records = 9;
   */
  records: Record[];
};

/**
 * Describes the message activity.v1.GetActivityResponse.
 * Use `create(GetActivityResponseSchema)` to create a new message.
 */
export const GetActivityResponseSchema: GenMessage<GetActivityResponse> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 2);

/**
 * ActivitySummary provides a summarized view of an activity.
 *
 * @generated from message activity.v1.ActivitySummary
 */
export type ActivitySummary = Message<"activity.v1.ActivitySummary"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: double distance = 3;
   */
  distance: number;

  /**
   * @generated from field: string activity_name = 4;
   */
  activityName: string;

  /**
   * @generated from field: double avg_speed = 5;
   */
  avgSpeed: number;

  /**
   * @generated from field: double max_speed = 6;
   */
  maxSpeed: number;

  /**
   * @generated from field: string elapsed_time = 7;
   */
  elapsedTime: string;

  /**
   * @generated from field: string total_time = 8;
   */
  totalTime: string;
};

/**
 * Describes the message activity.v1.ActivitySummary.
 * Use `create(ActivitySummarySchema)` to create a new message.
 */
export const ActivitySummarySchema: GenMessage<ActivitySummary> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 3);

/**
 * Request message for streaming uploads
 *
 * @generated from message activity.v1.UploadActivitiesRequest
 */
export type UploadActivitiesRequest = Message<"activity.v1.UploadActivitiesRequest"> & {
  /**
   * @generated from oneof activity.v1.UploadActivitiesRequest.payload
   */
  payload: {
    /**
     * Chunk of file data
     *
     * @generated from field: bytes file_chunk = 1;
     */
    value: Uint8Array;
    case: "fileChunk";
  } | {
    /**
     * Optional metadata (e.g., user ID, filename)
     *
     * @generated from field: string metadata = 2;
     */
    value: string;
    case: "metadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message activity.v1.UploadActivitiesRequest.
 * Use `create(UploadActivitiesRequestSchema)` to create a new message.
 */
export const UploadActivitiesRequestSchema: GenMessage<UploadActivitiesRequest> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 4);

/**
 * Response message after upload
 *
 * @generated from message activity.v1.UploadActivitiesResponse
 */
export type UploadActivitiesResponse = Message<"activity.v1.UploadActivitiesResponse"> & {
  /**
   * Status of the upload (e.g., "success" or error message)
   *
   * @generated from field: string status = 1;
   */
  status: string;
};

/**
 * Describes the message activity.v1.UploadActivitiesResponse.
 * Use `create(UploadActivitiesResponseSchema)` to create a new message.
 */
export const UploadActivitiesResponseSchema: GenMessage<UploadActivitiesResponse> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 5);

/**
 * @generated from message activity.v1.UploadActivitiesUnaryFile
 */
export type UploadActivitiesUnaryFile = Message<"activity.v1.UploadActivitiesUnaryFile"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: string content_type = 3;
   */
  contentType: string;

  /**
   * Unix milliseconds
   *
   * @generated from field: int64 last_modified = 4;
   */
  lastModified: bigint;
};

/**
 * Describes the message activity.v1.UploadActivitiesUnaryFile.
 * Use `create(UploadActivitiesUnaryFileSchema)` to create a new message.
 */
export const UploadActivitiesUnaryFileSchema: GenMessage<UploadActivitiesUnaryFile> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 6);

/**
 * @generated from message activity.v1.UploadActivitiesUnaryRequest
 */
export type UploadActivitiesUnaryRequest = Message<"activity.v1.UploadActivitiesUnaryRequest"> & {
  /**
   * @generated from field: repeated activity.v1.UploadActivitiesUnaryFile files = 1;
   */
  files: UploadActivitiesUnaryFile[];
};

/**
 * Describes the message activity.v1.UploadActivitiesUnaryRequest.
 * Use `create(UploadActivitiesUnaryRequestSchema)` to create a new message.
 */
export const UploadActivitiesUnaryRequestSchema: GenMessage<UploadActivitiesUnaryRequest> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 7);

/**
 * GetActivitiesResponse contains a list of activity summaries.
 *
 * @generated from message activity.v1.GetActivitiesResponse
 */
export type GetActivitiesResponse = Message<"activity.v1.GetActivitiesResponse"> & {
  /**
   * @generated from field: repeated activity.v1.ActivitySummary activities = 1;
   */
  activities: ActivitySummary[];
};

/**
 * Describes the message activity.v1.GetActivitiesResponse.
 * Use `create(GetActivitiesResponseSchema)` to create a new message.
 */
export const GetActivitiesResponseSchema: GenMessage<GetActivitiesResponse> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 8);

/**
 * GetActivitiesRequest is an empty request message for fetching all activities.
 * If you prefer to keep using the standard Empty message, you can alias it, but
 * defining it explicitly is clearer.
 *
 * @generated from message activity.v1.GetActivitiesRequest
 */
export type GetActivitiesRequest = Message<"activity.v1.GetActivitiesRequest"> & {
};

/**
 * Describes the message activity.v1.GetActivitiesRequest.
 * Use `create(GetActivitiesRequestSchema)` to create a new message.
 */
export const GetActivitiesRequestSchema: GenMessage<GetActivitiesRequest> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 9);

/**
 * GetActivityRequest specifies the ID of the activity to retrieve.
 *
 * @generated from message activity.v1.GetActivityRequest
 */
export type GetActivityRequest = Message<"activity.v1.GetActivityRequest"> & {
  /**
   * @generated from field: int32 activity_id = 1;
   */
  activityId: number;
};

/**
 * Describes the message activity.v1.GetActivityRequest.
 * Use `create(GetActivityRequestSchema)` to create a new message.
 */
export const GetActivityRequestSchema: GenMessage<GetActivityRequest> = /*@__PURE__*/
  messageDesc(file_activity_v1_activity, 10);

/**
 * @generated from service activity.v1.ActivityService
 */
export const ActivityService: GenService<{
  /**
   * Fetch all activities without records.
   *
   * @generated from rpc activity.v1.ActivityService.GetActivities
   */
  getActivities: {
    methodKind: "unary";
    input: typeof GetActivitiesRequestSchema;
    output: typeof GetActivitiesResponseSchema;
  },
  /**
   * Fetch a single activity by ID with records.
   *
   * @generated from rpc activity.v1.ActivityService.GetActivity
   */
  getActivity: {
    methodKind: "unary";
    input: typeof GetActivityRequestSchema;
    output: typeof GetActivityResponseSchema;
  },
  /**
   * Upload multiple fit files
   *
   * @generated from rpc activity.v1.ActivityService.UploadActivities
   */
  uploadActivities: {
    methodKind: "client_streaming";
    input: typeof UploadActivitiesRequestSchema;
    output: typeof UploadActivitiesResponseSchema;
  },
  /**
   * Upload fit files using a unary request (for clients without streaming support)
   *
   * @generated from rpc activity.v1.ActivityService.UploadActivitiesUnary
   */
  uploadActivitiesUnary: {
    methodKind: "unary";
    input: typeof UploadActivitiesUnaryRequestSchema;
    output: typeof UploadActivitiesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_activity_v1_activity, 0);

