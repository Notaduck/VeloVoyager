name: CI/CD Pipeline (Preview) - Test and Build Docker Images

on:
  push:
    branches:
      - develop
    paths:
      - "**"
  pull_request:
    paths:
      - "**"
  workflow_dispatch:

jobs:
  determine-changes:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  backend-test:
    needs: [determine-changes]
    # if: needs.determine-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    environment: preview
    env:
      SERVER_PORT: 3000
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
      ENV: "preview"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
      - name: Install dependencies
        run: go mod download
      - name: Test with the Go CLI
        run: go test ./...

  frontend-build-push:
    needs: [determine-changes]
    if: needs.determine-changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set IMAGE_TAG
        id: set_image_tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Set DATESTAMP
        id: set_datestamp
        run: echo "DATESTAMP=$(date +'%Y%m%d')" >> $GITHUB_ENV
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push frontend Docker image
        run: |
          docker build --build-arg VITE_MAPBOX_TOKEN=${{ secrets.VITE_MAPBOX_TOKEN }} \
            --build-arg VITE_API_URL=${{ secrets.API_URL }} \
            --build-arg VITE_SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
            --build-arg VITE_SUPABASE_API_KEY=${{ secrets.SUPABASE_API_KEY }} \
            -t ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${IMAGE_TAG} .   
          docker tag ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${IMAGE_TAG} ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${IMAGE_TAG} ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${DATESTAMP}
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${IMAGE_TAG}
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${DATESTAMP}

  frontend-trigger-deployment:
    needs: [frontend-build-push]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment webhook
        run: |
          curl -X POST ${{ secrets.FRONTEND_PREVIEW_WEBHOOK }} -H "Content-Type: application/json" -d '{"image_tag": "${{ env.IMAGE_TAG }}", "datestamp": "${{ env.DATESTAMP }}"}'

  backend-build-push:
    needs: [backend-test]
    if: needs.determine-changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set IMAGE_TAG
        id: set_image_tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Set DATESTAMP
        id: set_datestamp
        run: echo "DATESTAMP=$(date +'%Y%m%d')" >> $GITHUB_ENV
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${IMAGE_TAG} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${IMAGE_TAG} ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${IMAGE_TAG} ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${DATESTAMP}
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${IMAGE_TAG}
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${DATESTAMP}

  backend-trigger-deployment:
    needs: [backend-build-push]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment webhook
        run: |
          curl -X POST ${{ secrets.BACKEND_PREVIEW_WEBHOOK }} -H "Content-Type: application/json" -d '{"image_tag": "${{ env.IMAGE_TAG }}", "datestamp": "${{ env.DATESTAMP }}"}'

  # backend-build:
  #   needs: [backend-test]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./backend
  #   outputs:
  #     backend_image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Set IMAGE_TAG
  #       id: set_image_tag
  #       run: echo "image_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT
  #     - name: Build backend Docker image
  #       run: |
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${{ steps.set_image_tag.outputs.image_tag }} .

  # backend-push:
  #   needs: [backend-build]
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Debug IMAGE_TAG
  #       run: echo "IMAGE_TAG=${{ needs.backend-build.outputs.backend_image_tag }}"
  #     - name: Push backend Docker image
  #       run: |
  #         docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${{ needs.backend-build.outputs.backend_image_tag }}
  #         docker tag ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${{ needs.backend-build.outputs.backend_image_tag }} ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:latest
  #         docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:latest
