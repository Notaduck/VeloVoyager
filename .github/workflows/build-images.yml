name: CI/CD Pipeline - Test and Build Docker Images

on:
  push:
    branches:
      - main
    paths:
      - '**'
  pull_request:
    paths:
      - '**'
  workflow_dispatch:

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  backend-test:
    needs: [determine-changes]
    if: needs.determine-changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    environment: preview
    env:
      SERVER_PORT: 3000
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
      ENV: 'preview'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Install dependencies
        run: go mod download
      - name: Test with the Go CLI
        run: go test ./...

  backend-build:
    needs: [backend-test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    outputs:
      backend_image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set IMAGE_TAG
        id: set_image_tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Build backend Docker image
        id: build_backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${{ env.IMAGE_TAG }} .
      - name: Set backend image tag output
        run: echo "backend_image_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

  frontend-build:
    needs: [determine-changes]
    if: needs.determine-changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    outputs:
      frontend_image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set IMAGE_TAG
        id: set_image_tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Build frontend Docker image
        id: build_frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${{ env.IMAGE_TAG }} .
      - name: Set frontend image tag output
        run: echo "frontend_image_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

  backend-push:
    needs: [backend-build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Debug IMAGE_TAG
        run: echo "IMAGE_TAG=${{ needs.backend-build.outputs.backend_image_tag }}"
      - name: Push backend Docker image
        env:
          IMAGE_TAG: ${{ needs.backend-build.outputs.backend_image_tag }}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${{ env.IMAGE_TAG }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-backend:latest

  frontend-push:
    needs: [frontend-build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Debug IMAGE_TAG
        run: echo "IMAGE_TAG=${{ needs.frontend-build.outputs.frontend_image_tag }}"
      - name: Push frontend Docker image
        env:
          IMAGE_TAG: ${{ needs.frontend-build.outputs.frontend_image_tag }}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${{ env.IMAGE_TAG }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/velovoyager-frontend:latest
